// <auto-generated />
using System;
using C_Stocke.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace C_Stocke.Migrations
{
    [DbContext(typeof(GestionStockDbContext))]
    [Migration("20250511230237_Creation")]
    partial class Creation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("C_Stocke.Entities.Categorie", b =>
                {
                    b.Property<int>("ID_CATEGORIE")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom_Categorie")
                        .HasColumnType("TEXT");

                    b.HasKey("ID_CATEGORIE");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("C_Stocke.Entities.Client", b =>
                {
                    b.Property<int>("ID_Client")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adresse_Client")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email_Client")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom_Client")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Pays_Client")
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenom_Client")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telephone_Client")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ville_Client")
                        .HasColumnType("TEXT");

                    b.HasKey("ID_Client");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("C_Stocke.Entities.Commande", b =>
                {
                    b.Property<int>("ID_Commande")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClientID_Client")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DATE_Commande")
                        .HasColumnType("TEXT");

                    b.Property<int>("ID_Client")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TauxTVA")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalHT")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalTTC")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalTVA")
                        .HasColumnType("TEXT");

                    b.HasKey("ID_Commande");

                    b.HasIndex("ClientID_Client");

                    b.ToTable("Commandes");
                });

            modelBuilder.Entity("C_Stocke.Entities.Details_Commande", b =>
                {
                    b.Property<int>("ID_Commande")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(0);

                    b.Property<int>("ID_Produit")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(1);

                    b.Property<decimal>("PrixUnitaire")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantite")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("RemisePourcentage")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("ID_Commande", "ID_Produit");

                    b.HasIndex("ID_Produit");

                    b.ToTable("Details_Commandes");
                });

            modelBuilder.Entity("C_Stocke.Entities.Produit", b =>
                {
                    b.Property<int>("ID_Produit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CategorieID_CATEGORIE")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ID_CATEGORIE")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Image_Produit")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom_Produit")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Prix_Produit")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantite_Produit")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID_Produit");

                    b.HasIndex("CategorieID_CATEGORIE");

                    b.ToTable("Produits");
                });

            modelBuilder.Entity("C_Stocke.Entities.Utilisateur", b =>
                {
                    b.Property<string>("NomUtilisateur")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mot_De_Passe")
                        .HasColumnType("TEXT");

                    b.HasKey("NomUtilisateur");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("C_Stocke.Entities.Commande", b =>
                {
                    b.HasOne("C_Stocke.Entities.Client", "Client")
                        .WithMany("Commandes")
                        .HasForeignKey("ClientID_Client");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("C_Stocke.Entities.Details_Commande", b =>
                {
                    b.HasOne("C_Stocke.Entities.Commande", "Commande")
                        .WithMany("Details_Commandes")
                        .HasForeignKey("ID_Commande")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("C_Stocke.Entities.Produit", "Produit")
                        .WithMany("Details_Commandes")
                        .HasForeignKey("ID_Produit")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Commande");

                    b.Navigation("Produit");
                });

            modelBuilder.Entity("C_Stocke.Entities.Produit", b =>
                {
                    b.HasOne("C_Stocke.Entities.Categorie", "Categorie")
                        .WithMany("Produits")
                        .HasForeignKey("CategorieID_CATEGORIE");

                    b.Navigation("Categorie");
                });

            modelBuilder.Entity("C_Stocke.Entities.Categorie", b =>
                {
                    b.Navigation("Produits");
                });

            modelBuilder.Entity("C_Stocke.Entities.Client", b =>
                {
                    b.Navigation("Commandes");
                });

            modelBuilder.Entity("C_Stocke.Entities.Commande", b =>
                {
                    b.Navigation("Details_Commandes");
                });

            modelBuilder.Entity("C_Stocke.Entities.Produit", b =>
                {
                    b.Navigation("Details_Commandes");
                });
#pragma warning restore 612, 618
        }
    }
}
